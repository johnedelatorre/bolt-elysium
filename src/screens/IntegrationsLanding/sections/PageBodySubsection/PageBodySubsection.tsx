import { SearchIcon } from "lucide-react";
import React, { useState } from "react";
import { Badge } from "../../../../components/ui/badge";
import { Button } from "../../../../components/ui/button";
import { Card, CardContent } from "../../../../components/ui/card";
import { Checkbox } from "../../../../components/ui/checkbox";
import { Input } from "../../../../components/ui/input";
import { Separator } from "../../../../components/ui/separator";
import { Tabs, TabsList, TabsTrigger } from "../../../../components/ui/tabs";

export const PageBodySubsection = (): JSX.Element => {
  const [isInstalledToggled, setIsInstalledToggled] = useState(false);
  const [activeTab, setActiveTab] = useState("browse");
  const [alertsBreakdownExpanded, setAlertsBreakdownExpanded] = useState(true);
  const [alertsLineChartExpanded, setAlertsLineChartExpanded] = useState(true);
  const [alertsBarChartExpanded, setAlertsBarChartExpanded] = useState(true);
  const [selectedRows, setSelectedRows] = useState<number[]>([1, 2, 3]);
  const [selectAll, setSelectAll] = useState(false);

  // Featured integrations data
  const featuredIntegrations = [
    {
      title: "Web Crawler",
      description:
        "Add search to your website with the Enterprise Search Web Crawler",
      iconSrc: "/union-1.svg",
    },
    {
      title: "Elysium APM",
      description:
        "Monitor, detect and diagnose complex application performance issues",
      iconSrc: "/union-6.svg",
    },
    {
      title: "Endpoint and Cloud Security",
      description:
        "Protect your hosts and cloud workloads with threat prevention, detection and deep security data visibility",
      iconSrc: "/union.svg",
    },
  ];

  // Categories data with counts
  const categories = [
    { name: "All Categories", count: 300, isSelected: true },
    { name: "AWS", count: 10, isSelected: false },
    { name: "Azure", count: 3, isSelected: false },
    { name: "Cloud", count: 2, isSelected: false },
    { name: "Communications", count: 100, isSelected: false },
    { name: "Config Management", count: 111, isSelected: false },
    { name: "Containers", count: 45, isSelected: false },
    { name: "CRM", count: 100, isSelected: false },
    { name: "Database", count: 224, isSelected: false },
    { name: "Elastic Stack", count: 224, isSelected: false },
    { name: "Enterprise Search", count: 224, isSelected: false },
    { name: "File Storage", count: 224, isSelected: false },
    { name: "Geo", count: 224, isSelected: false },
    { name: "Google Cloud", count: 224, isSelected: false },
    { name: "Infrastructure", count: 224, isSelected: false },
    { name: "Kubernetes", count: 224, isSelected: false },
    { name: "Language Client", count: 224, isSelected: false },
    { name: "Message Broker", count: 224, isSelected: false },
    { name: "Microsoft 365", count: 224, isSelected: false },
    { name: "Monitoring", count: 224, isSelected: false },
    { name: "Operating Systems", count: 224, isSelected: false },
    { name: "Threat Intelligence", count: 224, isSelected: false },
    { name: "Upload a File", count: 224, isSelected: false },
    { name: "Web Server", count: 224, isSelected: false },
  ];

  // Integration cards data
  const integrationCards = [
    {
      title: "AWS EC2",
      description: "Collect logs from 1Password with Elastic Agent.",
      installedCount: 5,
      iconType: "aws",
    },
    {
      title: "Amazon Cloud",
      description: "Collect logs from 1Password with Elastic Agent.",
      installedCount: 5,
      iconType: "amazon",
    },
    {
      title: "Microsoft",
      description: "Collect logs from 1Password with Elastic Agent.",
      installedCount: 5,
      iconType: "microsoft",
    },
  ];

  // Create rows of integration cards for the grid view
  const integrationRows = Array(7).fill(integrationCards);

  // Manage tab data
  const alertsData = [
    {
      id: 1,
      description: "Analyze mock web traffic log data for Elastic's website",
      status: "Installed",
      category: "Security Data Analytics",
      lastUpdated: "Dec 17, 2020",
    },
    {
      id: 2,
      description: "Analyze mock web traffic log data for Elastic's website",
      status: "Installed",
      category: "Security Data Analytics",
      lastUpdated: "Dec 17, 2020",
    },
    {
      id: 3,
      description: "Analyze mock web traffic log data for Elastic's website",
      status: "Installed",
      category: "Security Data Analytics",
      lastUpdated: "Dec 17, 2020",
    },
    {
      id: 4,
      description: "Analyze mock web traffic log data for Elastic's website",
      status: "Installed",
      category: "Metrics",
      lastUpdated: "Dec 17, 2020",
    },
    {
      id: 5,
      description: "Analyze mock web traffic log data for Elastic's website",
      status: "Installed",
      category: "Analytics",
      lastUpdated: "Dec 17, 2020",
    },
    {
      id: 6,
      description: "Analyze mock web traffic log data for Elastic's website",
      status: "Installed",
      category: "Security Data Analytics",
      lastUpdated: "Dec 17, 2020",
    },
    {
      id: 7,
      description: "Analyze mock web traffic log data for Elastic's website",
      status: "Installed",
      category: "Security Data Analytics",
      lastUpdated: "Dec 17, 2020",
    },
    {
      id: 8,
      description: "Analyze mock web traffic log data for Elastic's website",
      status: "Installed",
      category: "Security Data Analytics",
      lastUpdated: "Dec 17, 2020",
    },
    {
      id: 9,
      description: "Analyze mock web traffic log data for Elastic's website",
      status: "Installed",
      category: "Security Data Analytics",
      lastUpdated: "Dec 17, 2020",
    },
    {
      id: 10,
      description: "Analyze mock web traffic log data for Elastic's website",
      status: "Installed",
      category: "Security Data Analytics",
      lastUpdated: "Dec 17, 2020",
    }
  ];

  // Line chart data
  const lineChartData = [
    { day: 'Mon', value: 1000, x: 80, y: 280 },
    { day: 'Tue', value: 3000, x: 180, y: 200 },
    { day: 'Wed', value: 8000, x: 280, y: 80 },
    { day: 'Thu', value: 2500, x: 380, y: 220 },
    { day: 'Fri', value: 1000, x: 480, y: 280 },
    { day: 'Sat', value: 8500, x: 580, y: 70 },
    { day: 'Sun', value: 3000, x: 680, y: 200 }
  ];

  // Bar chart data
  const barChartData = [
    { day: '14', income: 200, expense: 150 },
    { day: '15', income: 120, expense: 140 },
    { day: '16', income: 250, expense: 130 },
    { day: '17', income: 200, expense: 60 },
    { day: '18', income: 220, expense: 140 },
    { day: '19', income: 180, expense: 150 },
    { day: '20', income: 80, expense: 400 },
    { day: '21', income: 240, expense: 100 },
    { day: '22', income: 300, expense: 200 }
  ];

  const handleRowSelect = (id: number) => {
    setSelectedRows(prev => 
      prev.includes(id) 
        ? prev.filter(rowId => rowId !== id)
        : [...prev, id]
    );
  };

  const handleSelectAll = () => {
    if (selectAll) {
      setSelectedRows([]);
    } else {
      setSelectedRows(alertsData.map(alert => alert.id));
    }
    setSelectAll(!selectAll);
  };

  const clearSelection = () => {
    setSelectedRows([]);
    setSelectAll(false);
  };

  return (
    <div className="flex flex-col flex-1 bg-[#19191a] h-screen overflow-hidden shadow-shadow-bottom-medium custom-scrollbar">
      {/* STICKY HEADER - Only this section is sticky */}
      <header className="sticky top-0 z-10 flex items-center justify-between p-2 w-full bg-[#19191a] shadow-shadow-bottom-small">
        {/* Breadcrumb SVG */}
        <svg width="219" height="24" viewBox="0 0 219 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <g clipPath="url(#clip0_4294_59755)">
            <rect width="41" height="24" fill="#69707D" fillOpacity="0.2"/>
            <path d="M14.4746 10.9902V12.2559H9.98633V10.9902H14.4746ZM10.4258 7.46875V16H8.81445V7.46875H10.4258ZM15.6699 7.46875V16H14.0586V7.46875H15.6699ZM16.918 12.8945V12.7715C16.918 12.3066 16.9844 11.8789 17.1172 11.4883C17.25 11.0938 17.4434 10.752 17.6973 10.4629C17.9512 10.1738 18.2617 9.94922 18.6289 9.78906C18.9961 9.625 19.4141 9.54297 19.8828 9.54297C20.3594 9.54297 20.7812 9.625 21.1484 9.78906C21.5195 9.94922 21.832 10.1738 22.0859 10.4629C22.3398 10.752 22.5332 11.0938 22.666 11.4883C22.7988 11.8789 22.8652 12.3066 22.8652 12.7715V12.8945C22.8652 13.3555 22.7988 13.7832 22.666 14.1777C22.5332 14.5684 22.3398 14.9102 22.0859 15.2031C21.832 15.4922 21.5215 15.7168 21.1543 15.877C20.7871 16.0371 20.3672 16.1172 19.8945 16.1172C19.4258 16.1172 19.0059 16.0371 18.6348 15.877C18.2637 15.7168 17.9512 15.4922 17.6973 15.2031C17.4434 14.9102 17.25 14.5684 17.1172 14.1777C16.9844 13.7832 16.918 13.3555 16.918 12.8945ZM18.4648 12.7715V12.8945C18.4648 13.1719 18.4922 13.4316 18.5469 13.6738C18.6016 13.916 18.6855 14.1289 18.7988 14.3125C18.9121 14.4961 19.0586 14.6406 19.2383 14.7461C19.4219 14.8477 19.6406 14.8984 19.8945 14.8984C20.1445 14.8984 20.3594 14.8477 20.5391 14.7461C20.7188 14.6406 20.8652 14.4961 20.9785 14.3125C21.0957 14.1289 21.1816 13.916 21.2363 13.6738C21.291 13.4316 21.3184 13.1719 21.3184 12.8945V12.7715C21.3184 12.498 21.291 12.2422 21.2363 12.0039C21.1816 11.7617 21.0957 11.5488 20.9785 11.3652C20.8652 11.1777 20.7168 11.0312 20.5332 10.9258C20.3535 10.8164 20.1367 10.7617 19.8828 10.7617C19.6328 10.7617 19.418 10.8164 19.2383 10.9258C19.0586 11.0312 18.9121 11.1777 18.7988 11.3652C18.6855 11.5488 18.6016 11.7617 18.5469 12.0039C18.4922 12.2422 18.4648 12.498 18.4648 12.7715ZM25.5312 10.9609V16H23.9844V9.66016H25.4434L25.5312 10.9609ZM25.3027 12.6016H24.8281C24.8281 12.1602 24.8809 11.7539 24.9863 11.3828C25.0957 11.0117 25.2559 10.6895 25.4668 10.416C25.6777 10.1387 25.9375 9.92383 26.2461 9.77148C26.5586 9.61914 26.9199 9.54297 27.3301 9.54297C27.6152 9.54297 27.877 9.58594 28.1152 9.67188C28.3535 9.75391 28.5586 9.88477 28.7305 10.0645C28.9062 10.2402 29.041 10.4707 29.1348 10.7559C29.2285 11.0371 29.2754 11.375 29.2754 11.7695V16H27.7285V11.9277C27.7285 11.6309 27.6855 11.3984 27.5996 11.2305C27.5176 11.0625 27.3984 10.9453 27.2422 10.8789C27.0859 10.8086 26.8984 10.7734 26.6797 10.7734C26.4375 10.7734 26.2285 10.8223 26.0527 10.9199C25.8809 11.0137 25.7383 11.1445 25.625 11.3125C25.5156 11.4805 25.4336 11.6738 25.3789 11.8926C25.3281 12.1113 25.3027 12.3477 25.3027 12.6016ZM29.1582 12.3145L28.5195 12.4316C28.5234 12.0332 28.5781 11.6602 28.6836 11.3125C28.7891 10.9609 28.9434 10.6543 29.1465 10.3926C29.3535 10.127 29.6094 9.91992 29.9141 9.77148C30.2227 9.61914 30.5781 9.54297 30.9805 9.54297C31.293 9.54297 31.5742 9.58789 31.8242 9.67773C32.0781 9.76367 32.2949 9.90234 32.4746 10.0938C32.6543 10.2812 32.791 10.5254 32.8848 10.8262C32.9824 11.127 33.0312 11.4941 33.0312 11.9277V16H31.4727V11.9219C31.4727 11.6133 31.4297 11.377 31.3438 11.2129C31.2617 11.0488 31.1426 10.9355 30.9863 10.873C30.8301 10.8066 30.6465 10.7734 30.4355 10.7734C30.2207 10.7734 30.0332 10.8145 29.873 10.8965C29.7168 10.9746 29.584 11.084 29.4746 11.2246C29.3691 11.3652 29.2891 11.5293 29.2344 11.7168C29.1836 11.9004 29.1582 12.0996 29.1582 12.3145ZM37.2676 16.1172C36.7871 16.1172 36.3555 16.0391 35.9727 15.8828C35.5898 15.7266 35.2637 15.5098 34.9941 15.2324C34.7285 14.9512 34.5234 14.625 34.3789 14.2539C34.2383 13.8789 34.168 13.4766 34.168 13.0469V12.8125C34.168 12.3242 34.2383 11.8809 34.3789 11.4824C34.5195 11.0801 34.7188 10.7344 34.9766 10.4453C35.2344 10.1562 35.543 9.93359 35.9023 9.77734C36.2617 9.62109 36.6582 9.54297 37.0918 9.54297C37.541 9.54297 37.9375 9.61914 38.2812 9.77148C38.625 9.91992 38.9121 10.1309 39.1426 10.4043C39.373 10.6777 39.5469 11.0059 39.6641 11.3887C39.7812 11.7676 39.8398 12.1875 39.8398 12.6484V13.2988H34.8711V12.2324H38.3164V12.1152C38.3086 11.8691 38.2617 11.6445 38.1758 11.4414C38.0898 11.2344 37.957 11.0703 37.7773 10.9492C37.5977 10.8242 37.3652 10.7617 37.0801 10.7617C36.8496 10.7617 36.6484 10.8125 36.4766 10.9141C36.3086 11.0117 36.168 11.1523 36.0547 11.3359C35.9453 11.5156 35.8633 11.7305 35.8086 11.9805C35.7539 12.2305 35.7266 12.5078 35.7266 12.8125V13.0469C35.7266 13.3125 35.7617 13.5586 35.832 13.7852C35.9062 14.0117 36.0137 14.209 36.1543 14.377C36.2988 14.541 36.4707 14.6699 36.6699 14.7637C36.873 14.8535 37.1035 14.8984 37.3613 14.8984C37.6855 14.8984 37.9785 14.8359 38.2402 14.7109C38.5059 14.582 38.7363 14.3926 38.9316 14.1426L39.7109 14.9512C39.5781 15.1465 39.3984 15.334 39.1719 15.5137C38.9492 15.6934 38.6797 15.8398 38.3633 15.9531C38.0469 16.0625 37.6816 16.1172 37.2676 16.1172Z" fill="#69707D"/>
            <path d="M53 12L45 24H41V0H45L53 12Z" fill="#69707D" fillOpacity="0.2"/>
          </g>
          <path d="M65 0H49L57 12L49 24H65V0Z" fill="#69707D" fillOpacity="0.2"/>
          <rect width="53" height="24" transform="translate(65)" fill="#69707D" fillOpacity="0.2"/>
          <path d="M70.8066 13.1934H72.418C72.375 13.7637 72.2168 14.2695 71.9434 14.7109C71.6699 15.1484 71.2891 15.4922 70.8008 15.7422C70.3125 15.9922 69.7207 16.1172 69.0254 16.1172C68.4902 16.1172 68.0078 16.0234 67.5781 15.8359C67.1523 15.6445 66.7871 15.373 66.4824 15.0215C66.1816 14.666 65.9512 14.2402 65.791 13.7441C65.6309 13.2441 65.5508 12.6836 65.5508 12.0625V11.4121C65.5508 10.791 65.6328 10.2305 65.7969 9.73047C65.9609 9.23047 66.1953 8.80469 66.5 8.45312C66.8086 8.09766 67.1777 7.82422 67.6074 7.63281C68.041 7.44141 68.5254 7.3457 69.0605 7.3457C69.7559 7.3457 70.3438 7.47461 70.8242 7.73242C71.3047 7.98633 71.6777 8.33594 71.9434 8.78125C72.209 9.22656 72.3691 9.73828 72.4238 10.3164H70.8125C70.7812 9.95703 70.7031 9.65234 70.5781 9.40234C70.457 9.15234 70.2734 8.96289 70.0273 8.83398C69.7852 8.70117 69.4629 8.63477 69.0605 8.63477C68.748 8.63477 68.4727 8.69336 68.2344 8.81055C68 8.92773 67.8047 9.10352 67.6484 9.33789C67.4922 9.56836 67.375 9.85742 67.2969 10.2051C67.2188 10.5488 67.1797 10.9473 67.1797 11.4004V12.0625C67.1797 12.4961 67.2148 12.8848 67.2852 13.2285C67.3555 13.5723 67.4648 13.8633 67.6133 14.1016C67.7617 14.3398 67.9531 14.5215 68.1875 14.6465C68.4219 14.7715 68.7012 14.834 69.0254 14.834C69.4199 14.834 69.7402 14.7715 69.9863 14.6465C70.2363 14.5215 70.4258 14.3379 70.5547 14.0957C70.6875 13.8535 70.7715 13.5527 70.8066 13.1934ZM73.2734 12.8945V12.7715C73.2734 12.3066 73.3398 11.8789 73.4727 11.4883C73.6055 11.0938 73.7988 10.752 74.0527 10.4629C74.3066 10.1738 74.6172 9.94922 74.9844 9.78906C75.3516 9.625 75.7695 9.54297 76.2383 9.54297C76.7148 9.54297 77.1367 9.625 77.5039 9.78906C77.875 9.94922 78.1875 10.1738 78.4414 10.4629C78.6953 10.752 78.8887 11.0938 79.0215 11.4883C79.1543 11.8789 79.2207 12.3066 79.2207 12.7715V12.8945C79.2207 13.3555 79.1543 13.7832 79.0215 14.1777C78.8887 14.5684 78.6953 14.9102 78.4414 15.2031C78.1875 15.4922 77.877 15.7168 77.5098 15.877C77.1426 16.0371 76.7227 16.1172 76.25 16.1172C75.7812 16.1172 75.3613 16.0371 74.9902 15.877C74.6191 15.7168 74.3066 15.4922 74.0527 15.2031C73.7988 14.9102 73.6055 14.5684 73.4727 14.1777C73.3398 13.7832 73.2734 13.3555 73.2734 12.8945ZM74.8203 12.7715V12.8945C74.8203 13.1719 74.8477 13.4316 74.9023 13.6738C74.957 13.916 75.041 14.1289 75.1543 14.3125C75.2676 14.4961 75.4141 14.6406 75.5938 14.7461C75.7773 14.8477 75.9961 14.8984 76.25 14.8984C76.5 14.8984 76.7148 14.8477 76.8945 14.7461C77.0742 14.6406 77.2207 14.4961 77.334 14.3125C77.4512 14.1289 77.5371 13.916 77.5918 13.6738C77.6465 13.4316 77.6738 13.1719 77.6738 12.8945V12.7715C77.6738 12.498 77.6465 12.2422 77.5918 12.0039C77.5371 11.7617 77.4512 11.5488 77.334 11.3652C77.2207 11.1777 77.0723 11.0312 76.8887 10.9258C76.709 10.8164 76.4922 10.7617 76.2383 10.7617C75.9883 10.7617 75.7734 10.8164 75.5938 10.9258C75.4141 11.0312 75.2676 11.1777 75.1543 11.3652C75.041 11.5488 74.957 11.7617 74.9023 12.0039C74.8477 12.2422 74.8203 12.498 74.8203 12.7715ZM81.8633 11.0137V16H80.3164V9.66016H81.7695L81.8633 11.0137ZM81.6172 12.6016H81.1602C81.1641 12.1406 81.2266 11.7227 81.3477 11.3477C81.4688 10.9727 81.6387 10.6504 81.8574 10.3809C82.0801 10.1113 82.3438 9.9043 82.6484 9.75977C82.9531 9.61523 83.293 9.54297 83.668 9.54297C83.9727 9.54297 84.248 9.58594 84.4941 9.67188C84.7402 9.75781 84.9512 9.89453 85.127 10.082C85.3066 10.2695 85.4434 10.5156 85.5371 10.8203C85.6348 11.1211 85.6836 11.4922 85.6836 11.9336V16H84.125V11.9219C84.125 11.6328 84.082 11.4043 83.9961 11.2363C83.9141 11.0684 83.793 10.9492 83.6328 10.8789C83.4766 10.8086 83.2832 10.7734 83.0527 10.7734C82.8145 10.7734 82.6055 10.8223 82.4258 10.9199C82.25 11.0137 82.1016 11.1445 81.9805 11.3125C81.8633 11.4805 81.7734 11.6738 81.7109 11.8926C81.6484 12.1113 81.6172 12.3477 81.6172 12.6016ZM89.0059 16H87.4473V9.30859C87.4473 8.78516 87.5527 8.34375 87.7637 7.98438C87.9785 7.62109 88.2852 7.3457 88.6836 7.1582C89.0859 6.9707 89.5645 6.87695 90.1191 6.87695C90.4434 6.87695 90.7559 6.91016 91.0566 6.97656C91.3613 7.03906 91.6738 7.12109 91.9941 7.22266L91.7656 8.47656C91.5586 8.41016 91.332 8.34766 91.0859 8.28906C90.8438 8.23047 90.5566 8.20117 90.2246 8.20117C89.8145 8.20117 89.5078 8.29492 89.3047 8.48242C89.1055 8.66992 89.0059 8.94531 89.0059 9.30859V16ZM90.2715 9.66016V10.7734H86.4922V9.66016H90.2715ZM92.7207 9.66016V16H91.168V9.66016H92.7207ZM98.252 9.66016H99.6582V15.8066C99.6582 16.3809 99.5332 16.8672 99.2832 17.2656C99.0371 17.668 98.6914 17.9727 98.2461 18.1797C97.8008 18.3906 97.2832 18.4961 96.6934 18.4961C96.4395 18.4961 96.1641 18.4609 95.8672 18.3906C95.5742 18.3203 95.291 18.209 95.0176 18.0566C94.748 17.9082 94.5234 17.7148 94.3438 17.4766L95.041 16.5625C95.252 16.8086 95.4902 16.9941 95.7559 17.1191C96.0215 17.248 96.3086 17.3125 96.6172 17.3125C96.9297 17.3125 97.1953 17.2539 97.4141 17.1367C97.6367 17.0234 97.8066 16.8555 97.9238 16.6328C98.0449 16.4141 98.1055 16.1445 98.1055 15.8242V11.1074L98.252 9.66016ZM93.9688 12.9062V12.7832C93.9688 12.2988 94.0273 11.8594 94.1445 11.4648C94.2617 11.0664 94.4297 10.7246 94.6484 10.4395C94.8711 10.1543 95.1387 9.93359 95.4512 9.77734C95.7676 9.62109 96.123 9.54297 96.5176 9.54297C96.9355 9.54297 97.2871 9.61914 97.5723 9.77148C97.8613 9.92383 98.0996 10.1406 98.2871 10.4219C98.4785 10.7031 98.627 11.0371 98.7324 11.4238C98.8418 11.8066 98.9258 12.2285 98.9844 12.6895V13.0234C98.9297 13.4727 98.8418 13.8848 98.7207 14.2598C98.6035 14.6348 98.4473 14.9629 98.252 15.2441C98.0566 15.5215 97.8145 15.7363 97.5254 15.8887C97.2363 16.041 96.8965 16.1172 96.5059 16.1172C96.1152 16.1172 95.7637 16.0371 95.4512 15.877C95.1387 15.7168 94.8711 15.4922 94.6484 15.2031C94.4297 14.9141 94.2617 14.5742 94.1445 14.1836C94.0273 13.793 93.9688 13.3672 93.9688 12.9062ZM95.5156 12.7832V12.9062C95.5156 13.1797 95.543 13.4355 95.5977 13.6738C95.6523 13.9121 95.7363 14.123 95.8496 14.3066C95.9629 14.4863 96.1055 14.627 96.2773 14.7285C96.4492 14.8301 96.6543 14.8809 96.8926 14.8809C97.2129 14.8809 97.4746 14.8145 97.6777 14.6816C97.8848 14.5449 98.041 14.3594 98.1465 14.125C98.2559 13.8867 98.3262 13.6191 98.3574 13.3223V12.4023C98.3379 12.168 98.2949 11.9512 98.2285 11.752C98.166 11.5527 98.0781 11.3809 97.9648 11.2363C97.8516 11.0918 97.707 10.9785 97.5312 10.8965C97.3555 10.8145 97.1465 10.7734 96.9043 10.7734C96.6699 10.7734 96.4648 10.8262 96.2891 10.9316C96.1133 11.0332 95.9688 11.1758 95.8555 11.3594C95.7422 11.543 95.6562 11.7559 95.5977 11.998C95.543 12.2402 95.5156 12.502 95.5156 12.7832ZM104.826 14.4941V9.66016H106.385V16H104.92L104.826 14.4941ZM105.025 13.1816L105.506 13.1699C105.506 13.5957 105.459 13.9883 105.365 14.3477C105.271 14.707 105.125 15.0195 104.926 15.2852C104.73 15.5469 104.482 15.752 104.182 15.9004C103.881 16.0449 103.525 16.1172 103.115 16.1172C102.803 16.1172 102.518 16.0742 102.26 15.9883C102.002 15.8984 101.779 15.7598 101.592 15.5723C101.408 15.3809 101.266 15.1367 101.164 14.8398C101.062 14.5391 101.012 14.1777 101.012 13.7559V9.66016H102.559V13.7676C102.559 13.9785 102.582 14.1543 102.629 14.2949C102.68 14.4355 102.748 14.5508 102.834 14.6406C102.924 14.7266 103.027 14.7891 103.145 14.8281C103.266 14.8633 103.395 14.8809 103.531 14.8809C103.906 14.8809 104.201 14.8066 104.416 14.6582C104.635 14.5059 104.791 14.3027 104.885 14.0488C104.979 13.791 105.025 13.502 105.025 13.1816ZM109.303 10.9551V16H107.756V9.66016H109.221L109.303 10.9551ZM111.23 9.61914L111.207 11.0605C111.121 11.0449 111.023 11.0332 110.914 11.0254C110.809 11.0176 110.709 11.0137 110.615 11.0137C110.377 11.0137 110.168 11.0469 109.988 11.1133C109.809 11.1758 109.658 11.2676 109.537 11.3887C109.42 11.5098 109.33 11.6582 109.268 11.834C109.205 12.0059 109.17 12.2012 109.162 12.4199L108.828 12.3789C108.828 11.9766 108.869 11.6035 108.951 11.2598C109.033 10.916 109.152 10.6152 109.309 10.3574C109.465 10.0996 109.66 9.90039 109.895 9.75977C110.133 9.61523 110.406 9.54297 110.715 9.54297C110.801 9.54297 110.893 9.55078 110.99 9.56641C111.092 9.57812 111.172 9.5957 111.23 9.61914ZM114.811 16.1172C114.33 16.1172 113.898 16.0391 113.516 15.8828C113.133 15.7266 112.807 15.5098 112.537 15.2324C112.271 14.9512 112.066 14.625 111.922 14.2539C111.781 13.8789 111.711 13.4766 111.711 13.0469V12.8125C111.711 12.3242 111.781 11.8809 111.922 11.4824C112.062 11.0801 112.262 10.7344 112.52 10.4453C112.777 10.1562 113.086 9.93359 113.445 9.77734C113.805 9.62109 114.201 9.54297 114.635 9.54297C115.084 9.54297 115.48 9.61914 115.824 9.77148C116.168 9.91992 116.455 10.1309 116.686 10.4043C116.916 10.6777 117.09 11.0059 117.207 11.3887C117.324 11.7676 117.383 12.1875 117.383 12.6484V13.2988H112.414V12.2324H115.859V12.1152C115.852 11.8691 115.805 11.6445 115.719 11.4414C115.633 11.2344 115.5 11.0703 115.32 10.9492C115.141 10.8242 114.908 10.7617 114.623 10.7617C114.393 10.7617 114.191 10.8125 114.02 10.9141C113.852 11.0117 113.711 11.1523 113.598 11.3359C113.488 11.5156 113.406 11.7305 113.352 11.9805C113.297 12.2305 113.27 12.5078 113.27 12.8125V13.0469C113.27 13.3125 113.305 13.5586 113.375 13.7852C113.449 14.0117 113.557 14.209 113.697 14.377C113.842 14.541 114.014 14.6699 114.213 14.7637C114.416 14.8535 114.646 14.8984 114.904 14.8984C115.229 14.8984 115.521 14.8359 115.783 14.7109C116.049 14.582 116.279 14.3926 116.475 14.1426L117.254 14.9512C117.121 15.1465 116.941 15.334 116.715 15.5137C116.492 15.6934 116.223 15.8398 115.906 15.9531C115.59 16.0625 115.225 16.1172 114.811 16.1172Z" fill="#69707D"/>
          <path d="M130 12L122 24H118V0H122L130 12Z" fill="#69707D" fillOpacity="0.2"/>
          <path d="M142 0H126L134 12L126 24H142V0Z" fill="#8EC2FF" fillOpacity="0.2"/>
          <rect width="65" height="24" transform="translate(142)" fill="#8EC2FF" fillOpacity="0.2"/>
          <path d="M144.531 7.46875V16H142.92V7.46875H144.531ZM147.672 11.0137V16H146.125V9.66016H147.578L147.672 11.0137ZM147.426 12.6016H146.969C146.973 12.1406 147.035 11.7227 147.156 11.3477C147.277 10.9727 147.447 10.6504 147.666 10.3809C147.889 10.1113 148.152 9.9043 148.457 9.75977C148.762 9.61523 149.102 9.54297 149.477 9.54297C149.781 9.54297 150.057 9.58594 150.303 9.67188C150.549 9.75781 150.76 9.89453 150.936 10.082C151.115 10.2695 151.252 10.5156 151.346 10.8203C151.443 11.1211 151.492 11.4922 151.492 11.9336V16H149.934V11.9219C149.934 11.6328 149.891 11.4043 149.805 11.2363C149.723 11.0684 149.602 10.9492 149.441 10.8789C149.285 10.8086 149.092 10.7734 148.861 10.7734C148.623 10.7734 148.414 10.8223 148.234 10.9199C148.059 11.0137 147.91 11.1445 147.789 11.3125C147.672 11.4805 147.582 11.6738 147.52 11.8926C147.457 12.1113 147.426 12.3477 147.426 12.6016ZM155.857 9.66016V10.7734H152.225V9.66016H155.857ZM153.197 8.10156H154.75V14.1719C154.75 14.3594 154.775 14.5039 154.826 14.6055C154.877 14.707 154.953 14.7754 155.055 14.8105C155.156 14.8457 155.277 14.8633 155.418 14.8633C155.52 14.8633 155.613 14.8574 155.699 14.8457C155.785 14.834 155.857 14.8223 155.916 14.8105L155.922 15.9707C155.793 16.0137 155.646 16.0488 155.482 16.0762C155.322 16.1035 155.141 16.1172 154.938 16.1172C154.59 16.1172 154.285 16.0586 154.023 15.9414C153.762 15.8203 153.559 15.627 153.414 15.3613C153.27 15.0918 153.197 14.7363 153.197 14.2949V8.10156ZM159.736 16.1172C159.256 16.1172 158.824 16.0391 158.441 15.8828C158.059 15.7266 157.732 15.5098 157.463 15.2324C157.197 14.9512 156.992 14.625 156.848 14.2539C156.707 13.8789 156.637 13.4766 156.637 13.0469V12.8125C156.637 12.3242 156.707 11.8809 156.848 11.4824C156.988 11.0801 157.188 10.7344 157.445 10.4453C157.703 10.1562 158.012 9.93359 158.371 9.77734C158.73 9.62109 159.127 9.54297 159.561 9.54297C160.01 9.54297 160.406 9.61914 160.75 9.77148C161.094 9.91992 161.381 10.1309 161.611 10.4043C161.842 10.6777 162.016 11.0059 162.133 11.3887C162.25 11.7676 162.309 12.1875 162.309 12.6484V13.2988H157.34V12.2324H160.785V12.1152C160.777 11.8691 160.73 11.6445 160.645 11.4414C160.559 11.2344 160.426 11.0703 160.246 10.9492C160.066 10.8242 159.834 10.7617 159.549 10.7617C159.318 10.7617 159.117 10.8125 158.945 10.9141C158.777 11.0117 158.637 11.1523 158.523 11.3359C158.414 11.5156 158.332 11.7305 158.277 11.9805C158.223 12.2305 158.195 12.5078 158.195 12.8125V13.0469C158.195 13.3125 158.23 13.5586 158.301 13.7852C158.375 14.0117 158.482 14.209 158.623 14.377C158.768 14.541 158.939 14.6699 159.139 14.7637C159.342 14.8535 159.572 14.8984 159.83 14.8984C160.154 14.8984 160.447 14.8359 160.709 14.7109C160.975 14.582 161.205 14.3926 161.4 14.1426L162.18 14.9512C162.047 15.1465 161.867 15.334 161.641 15.5137C161.418 15.6934 161.148 15.8398 160.832 15.9531C160.516 16.0625 160.15 16.1172 159.736 16.1172ZM167.377 9.66016H168.783V15.8066C168.783 16.3809 168.658 16.8672 168.408 17.2656C168.162 17.668 167.816 17.9727 167.371 18.1797C166.926 18.3906 166.408 18.4961 165.818 18.4961C165.564 18.4961 165.289 18.4609 164.992 18.3906C164.699 18.3203 164.416 18.209 164.143 18.0566C163.873 17.9082 163.648 17.7148 163.469 17.4766L164.166 16.5625C164.377 16.8086 164.615 16.9941 164.881 17.1191C165.146 17.248 165.434 17.3125 165.742 17.3125C166.055 17.3125 166.32 17.2539 166.539 17.1367C166.762 17.0234 166.932 16.8555 167.049 16.6328C167.17 16.4141 167.23 16.1445 167.23 15.8242V11.1074L167.377 9.66016ZM163.094 12.9062V12.7832C163.094 12.2988 163.152 11.8594 163.27 11.4648C163.387 11.0664 163.555 10.7246 163.773 10.4395C163.996 10.1543 164.264 9.93359 164.576 9.77734C164.893 9.62109 165.248 9.54297 165.643 9.54297C166.061 9.54297 166.412 9.61914 166.697 9.77148C166.986 9.92383 167.225 10.1406 167.412 10.4219C167.604 10.7031 167.752 11.0371 167.857 11.4238C167.967 11.8066 168.051 12.2285 168.109 12.6895V13.0234C168.055 13.4727 167.967 13.8848 167.846 14.2598C167.729 14.6348 167.572 14.9629 167.377 15.2441C167.182 15.5215 166.939 15.7363 166.65 15.8887C166.361 16.041 166.021 16.1172 165.631 16.1172C165.24 16.1172 164.889 16.0371 164.576 15.877C164.264 15.7168 163.996 15.4922 163.773 15.2031C163.555 14.9141 163.387 14.5742 163.27 14.1836C163.152 13.793 163.094 13.3672 163.094 12.9062ZM164.641 12.7832V12.9062C164.641 13.1797 164.668 13.4355 164.723 13.6738C164.777 13.9121 164.861 14.123 164.975 14.3066C165.088 14.4863 165.23 14.627 165.402 14.7285C165.574 14.8301 165.779 14.8809 166.018 14.8809C166.338 14.8809 166.6 14.8145 166.803 14.6816C167.01 14.5449 167.166 14.3594 167.271 14.125C167.381 13.8867 167.451 13.6191 167.482 13.3223V12.4023C167.463 12.168 167.42 11.9512 167.354 11.752C167.291 11.5527 167.203 11.3809 167.09 11.2363C166.977 11.0918 166.832 10.9785 166.656 10.8965C166.48 10.8145 166.271 10.7734 166.029 10.7734C165.795 10.7734 165.59 10.8262 165.414 10.9316C165.238 11.0332 165.094 11.1758 164.98 11.3594C164.867 11.543 164.781 11.7559 164.723 11.998C164.668 12.2402 164.641 12.502 164.641 12.7832ZM171.725 10.9551V16H170.178V9.66016H171.643L171.725 10.9551ZM173.652 9.61914L173.629 11.0605C173.543 11.0449 173.445 11.0332 173.336 11.0254C173.23 11.0176 173.131 11.0137 173.037 11.0137C172.799 11.0137 172.59 11.0469 172.41 11.1133C172.23 11.1758 172.08 11.2676 171.959 11.3887C171.842 11.5098 171.752 11.6582 171.689 11.834C171.627 12.0059 171.592 12.2012 171.584 12.4199L171.25 12.3789C171.25 11.9766 171.291 11.6035 171.373 11.2598C171.455 10.916 171.574 10.6152 171.73 10.3574C171.887 10.0996 172.082 9.90039 172.316 9.75977C172.555 9.61523 172.828 9.54297 173.137 9.54297C173.223 9.54297 173.314 9.55078 173.412 9.56641C173.514 9.57812 173.594 9.5957 173.652 9.61914ZM177.795 14.6523V11.7285C177.795 11.5137 177.758 11.3281 177.684 11.1719C177.609 11.0156 177.496 10.8945 177.344 10.8086C177.191 10.7227 176.998 10.6797 176.764 10.6797C176.557 10.6797 176.375 10.7148 176.219 10.7852C176.066 10.8555 175.949 10.9551 175.867 11.084C175.785 11.209 175.744 11.3535 175.744 11.5176H174.191C174.191 11.2559 174.254 11.0078 174.379 10.7734C174.504 10.5352 174.682 10.3242 174.912 10.1406C175.146 9.95312 175.426 9.80664 175.75 9.70117C176.078 9.5957 176.445 9.54297 176.852 9.54297C177.332 9.54297 177.76 9.625 178.135 9.78906C178.514 9.94922 178.811 10.1914 179.025 10.5156C179.244 10.8398 179.354 11.248 179.354 11.7402V14.5059C179.354 14.8223 179.373 15.0938 179.412 15.3203C179.455 15.543 179.518 15.7363 179.6 15.9004V16H178.023C177.949 15.8398 177.893 15.6367 177.854 15.3906C177.814 15.1406 177.795 14.8945 177.795 14.6523ZM178.012 12.1387L178.023 13.0586H177.045C176.803 13.0586 176.59 13.084 176.406 13.1348C176.223 13.1816 176.072 13.252 175.955 13.3457C175.838 13.4355 175.75 13.5449 175.691 13.6738C175.633 13.7988 175.604 13.9414 175.604 14.1016C175.604 14.2578 175.639 14.3984 175.709 14.5234C175.783 14.6484 175.889 14.748 176.025 14.8223C176.166 14.8926 176.33 14.9277 176.518 14.9277C176.791 14.9277 177.029 14.873 177.232 14.7637C177.436 14.6504 177.594 14.5137 177.707 14.3535C177.82 14.1934 177.881 14.041 177.889 13.8965L178.334 14.5645C178.279 14.7246 178.197 14.8945 178.088 15.0742C177.979 15.2539 177.838 15.4219 177.666 15.5781C177.494 15.7344 177.287 15.8633 177.045 15.9648C176.803 16.0664 176.521 16.1172 176.201 16.1172C175.791 16.1172 175.424 16.0352 175.1 15.8711C174.775 15.707 174.52 15.4824 174.332 15.1973C174.145 14.9121 174.051 14.5879 174.051 14.2246C174.051 13.8887 174.113 13.5918 174.238 13.334C174.363 13.0762 174.549 12.8594 174.795 12.6836C175.041 12.5039 175.346 12.3691 175.709 12.2793C176.076 12.1855 176.496 12.1387 176.969 12.1387H178.012ZM183.748 9.66016V10.7734H180.115V9.66016H183.748ZM181.088 8.10156H182.641V14.1719C182.641 14.3594 182.666 14.5039 182.717 14.6055C182.768 14.707 182.844 14.7754 182.945 14.8105C183.047 14.8457 183.168 14.8633 183.309 14.8633C183.41 14.8633 183.504 14.8574 183.59 14.8457C183.676 14.834 183.748 14.8223 183.807 14.8105L183.812 15.9707C183.684 16.0137 183.537 16.0488 183.373 16.0762C183.213 16.1035 183.031 16.1172 182.828 16.1172C182.48 16.1172 182.176 16.0586 181.914 15.9414C181.652 15.8203 181.449 15.627 181.305 15.3613C181.16 15.0918 181.088 14.7363 181.088 14.2949V8.10156ZM186.42 9.66016V16H184.867V9.66016H186.42ZM184.762 8.00195C184.762 7.77148 184.84 7.58008 184.996 7.42773C185.156 7.27539 185.371 7.19922 185.641 7.19922C185.91 7.19922 186.123 7.27539 186.279 7.42773C186.439 7.58008 186.52 7.77148 186.52 8.00195C186.52 8.22852 186.439 8.41797 186.279 8.57031C186.123 8.72266 185.91 8.79883 185.641 8.79883C185.371 8.79883 185.156 8.72266 184.996 8.57031C184.84 8.41797 184.762 8.22852 184.762 8.00195ZM187.621 12.8945V12.7715C187.621 12.3066 187.688 11.8789 187.82 11.4883C187.953 11.0938 188.146 10.752 188.4 10.4629C188.654 10.1738 188.965 9.94922 189.332 9.78906C189.699 9.625 190.117 9.54297 190.586 9.54297C191.062 9.54297 191.484 9.625 191.852 9.78906C192.223 9.94922 192.535 10.1738 192.789 10.4629C193.043 10.752 193.236 11.0938 193.369 11.4883C193.502 11.8789 193.568 12.3066 193.568 12.7715V12.8945C193.568 13.3555 193.502 13.7832 193.369 14.1777C193.236 14.5684 193.043 14.9102 192.789 15.2031C192.535 15.4922 192.225 15.7168 191.857 15.877C191.49 16.0371 191.07 16.1172 190.598 16.1172C190.129 16.1172 189.709 16.0371 189.338 15.877C188.967 15.7168 188.654 15.4922 188.4 15.2031C188.146 14.9102 187.953 14.5684 187.82 14.1777C187.688 13.7832 187.621 13.3555 187.621 12.8945ZM189.168 12.7715V12.8945C189.168 13.1719 189.195 13.4316 189.25 13.6738C189.305 13.916 189.389 14.1289 189.502 14.3125C189.615 14.4961 189.762 14.6406 189.941 14.7461C190.125 14.8477 190.344 14.8984 190.598 14.8984C190.848 14.8984 191.062 14.8477 191.242 14.7461C191.422 14.6406 191.568 14.4961 191.682 14.3125C191.799 14.1289 191.885 13.916 191.939 13.6738C191.994 13.4316 192.021 13.1719 192.021 12.8945V12.7715C192.021 12.498 191.994 12.2422 191.939 12.0039C191.885 11.7617 191.799 11.5488 191.682 11.3652C191.568 11.1777 191.42 11.0312 191.236 10.9258C191.057 10.8164 190.84 10.7617 190.586 10.7617C190.336 10.7617 190.121 10.8164 189.941 10.9258C189.762 11.0312 189.615 11.1777 189.502 11.3652C189.389 11.5488 189.305 11.7617 189.25 12.0039C189.195 12.2422 189.168 12.498 189.168 12.7715ZM196.211 11.0137V16H194.664V9.66016H196.117L196.211 11.0137ZM195.965 12.6016H195.508C195.512 12.1406 195.574 11.7227 195.695 11.3477C195.816 10.9727 195.986 10.6504 196.205 10.3809C196.428 10.1113 196.691 9.9043 196.996 9.75977C197.301 9.61523 197.641 9.54297 198.016 9.54297C198.32 9.54297 198.596 9.58594 198.842 9.67188C199.088 9.75781 199.299 9.89453 199.475 10.082C199.654 10.2695 199.791 10.5156 199.885 10.8203C199.982 11.1211 200.031 11.4922 200.031 11.9336V16H198.473V11.9219C198.473 11.6328 198.43 11.4043 198.344 11.2363C198.262 11.0684 198.141 10.9492 197.98 10.8789C197.824 10.8086 197.631 10.7734 197.4 10.7734C197.162 10.7734 196.953 10.8223 196.773 10.9199C196.598 11.0137 196.449 11.1445 196.328 11.3125C196.211 11.4805 196.121 11.6738 196.059 11.8926C195.996 12.1113 195.965 12.3477 195.965 12.6016ZM204.883 14.2656C204.883 14.1328 204.848 14.0137 204.777 13.9082C204.707 13.8027 204.574 13.707 204.379 13.6211C204.188 13.5312 203.906 13.4473 203.535 13.3691C203.207 13.2988 202.904 13.2109 202.627 13.1055C202.35 13 202.111 12.873 201.912 12.7246C201.713 12.5723 201.557 12.3945 201.443 12.1914C201.334 11.9844 201.279 11.7461 201.279 11.4766C201.279 11.2148 201.336 10.9688 201.449 10.7383C201.562 10.5039 201.727 10.2988 201.941 10.123C202.156 9.94336 202.418 9.80273 202.727 9.70117C203.035 9.5957 203.383 9.54297 203.77 9.54297C204.309 9.54297 204.771 9.63086 205.158 9.80664C205.549 9.98242 205.848 10.2246 206.055 10.5332C206.262 10.8379 206.365 11.1816 206.365 11.5645H204.818C204.818 11.3965 204.779 11.2441 204.701 11.1074C204.627 10.9707 204.512 10.8613 204.355 10.7793C204.199 10.6934 204.002 10.6504 203.764 10.6504C203.549 10.6504 203.367 10.6855 203.219 10.7559C203.074 10.8262 202.965 10.918 202.891 11.0312C202.816 11.1445 202.779 11.2695 202.779 11.4062C202.779 11.5078 202.799 11.5996 202.838 11.6816C202.881 11.7598 202.949 11.832 203.043 11.8984C203.137 11.9648 203.264 12.0254 203.424 12.0801C203.588 12.1348 203.789 12.1875 204.027 12.2383C204.5 12.332 204.912 12.457 205.264 12.6133C205.619 12.7656 205.896 12.9688 206.096 13.2227C206.295 13.4766 206.395 13.8008 206.395 14.1953C206.395 14.4766 206.334 14.7344 206.213 14.9688C206.092 15.1992 205.916 15.4004 205.686 15.5723C205.455 15.7441 205.18 15.8789 204.859 15.9766C204.539 16.0703 204.178 16.1172 203.775 16.1172C203.193 16.1172 202.701 16.0137 202.299 15.8066C201.896 15.5957 201.592 15.3301 201.385 15.0098C201.178 14.6855 201.074 14.3496 201.074 14.002H202.557C202.568 14.248 202.635 14.4453 202.756 14.5938C202.877 14.7422 203.029 14.8496 203.213 14.916C203.4 14.9785 203.598 15.0098 203.805 15.0098C204.039 15.0098 204.236 14.9785 204.396 14.916C204.557 14.8496 204.678 14.7617 204.76 14.6523C204.842 14.5391 204.883 14.4102 204.883 14.2656Z" fill="#00A8FF"/>
          <path d="M219 12L211 24H207V0H211L219 12Z" fill="#8EC2FF" fillOpacity="0.2"/>
          <defs>
            <clipPath id="clip0_4294_59755">
              <path d="M0 6C0 2.68629 2.68629 0 6 0H53V24H6C2.68629 24 0 21.3137 0 18V6Z" fill="white"/>
            </clipPath>
          </defs>
        </svg>

        <Button
          variant="default"
          className="h-8 bg-textprimary-euicolorprimarytext text-coreempty-euicoloremptyshade rounded"
        >
          <div className="w-4 h-4 mr-2">
            <img
              className="w-3.5 h-[13px] mt-[3px] ml-0.5"
              alt="Union"
              src="/union-7.svg"
            />
          </div>
          View Deployment Details
        </Button>
      </header>

      <Separator className="bg-[#303030]" />

      {/* SCROLLABLE CONTENT - Everything below the header scrolls */}
      <div className="flex-1 overflow-y-auto custom-scrollbar">
        <div className="flex flex-col gap-6 pt-6 pb-px px-6 w-full">
          <div className="flex flex-col gap-4">
            <div className="flex flex-col gap-2.5">
              <h1 className="font-title-large text-core-lightest-euicolorlightestshade text-[length:var(--title-large-font-size)] tracking-[var(--title-large-letter-spacing)] leading-[var(--title-large-line-height)]">
                Integrations
              </h1>
            </div>

            <p className="font-m-paragraph-regular text-text-disabled-euicolordisabledtext text-[length:var(--m-paragraph-regular-font-size)] tracking-[var(--m-paragraph-regular-letter-spacing)] leading-[var(--m-paragraph-regular-line-height)]">
              Choose an integration to start collecting and analyzing your data.
            </p>
          </div>

          {/* Updated Tabs with proper styling */}
          <div className="w-full border-b border-[#303030]">
            <div className="flex">
              <button
                onClick={() => setActiveTab("browse")}
                className={`
                  relative px-4 py-3 font-medium text-sm transition-colors duration-200
                  ${activeTab === "browse" 
                    ? "text-[#0071c2] border-b-2 border-[#0071c2]" 
                    : "text-text-disabled-euicolordisabledtext hover:text-[#ffffff]"
                  }
                `}
              >
                Browse Integrations
              </button>
              <button
                onClick={() => setActiveTab("manage")}
                className={`
                  relative px-4 py-3 font-medium text-sm transition-colors duration-200
                  ${activeTab === "manage" 
                    ? "text-[#0071c2] border-b-2 border-[#0071c2]" 
                    : "text-text-disabled-euicolordisabledtext hover:text-[#ffffff]"
                  }
                `}
              >
                Manage
              </button>
            </div>
          </div>
        </div>

        {/* Tab Content */}
        {activeTab === "browse" && (
          <>
            <div className="p-6 w-full flex justify-between">
              {featuredIntegrations.map((integration, index) => (
                <Card
                  key={index}
                  className="w-[370px] bg-[#23262b] border-[#303030] shadow-shadow-bottom-medium"
                >
                  <CardContent className="p-4 flex flex-col items-center gap-4">
                    <div className="flex flex-col items-center w-full rounded-[6px_6px_0px_0px]">
                      <div className="inline-flex items-center justify-center">
                        <div className="relative w-10 h-10">
                          <img
                            className="absolute w-[38px] h-[38px] top-0 left-0"
                            alt={integration.title}
                            src={integration.iconSrc}
                          />
                        </div>
                      </div>
                    </div>

                    <div className="flex flex-col items-center gap-2 w-full">
                      <h3 className="font-title-small text-panelplain text-[length:var(--title-small-font-size)] text-center tracking-[var(--title-small-letter-spacing)] leading-[var(--title-small-line-height)]">
                        {integration.title}
                      </h3>

                      <p className="font-s-paragraph-regular text-panelplain text-[length:var(--s-paragraph-regular-font-size)] text-center tracking-[var(--s-paragraph-regular-letter-spacing)] leading-[var(--s-paragraph-regular-line-height)]">
                        {integration.description}
                      </p>
                    </div>

                    <Button className="w-full h-10 bg-coreterciary-euicolorterciary text-coreempty-euicoloremptyshade rounded-md">
                      Select
                    </Button>
                  </CardContent>
                </Card>
              ))}
            </div>

            <div className="flex items-start gap-[50px] p-6 w-full">
              {/* Left sidebar with categories */}
              <div className="flex flex-col items-start flex-shrink-0">
                <div className="flex flex-col items-start gap-2">
                  {categories.map((category, index) => (
                    <div key={index} className="relative w-[200px] h-8">
                      <div className="relative h-8">
                        <Badge
                          className={`absolute top-1.5 right-0 ${category.isSelected ? "bg-coreprimary-euicolorprimary text-coreempty-euicoloremptyshade" : "bg-corelight-euicolorlightshade text-coreprimary-euicolorprimary"} px-1.5 py-0.5 rounded-[3px]`}
                        >
                          {category.count}
                        </Badge>

                        <div className="inline-flex items-center gap-2 absolute top-1.5 left-0">
                          <span
                            className={`${category.isSelected ? "font-s-paragraph-bold" : "font-s-paragraph-regular"} text-panelplain text-[length:var(--s-paragraph-${category.isSelected ? "bold" : "regular"}-font-size)] tracking-[var(--s-paragraph-${category.isSelected ? "bold" : "regular"}-letter-spacing)] leading-[var(--s-paragraph-${category.isSelected ? "bold" : "regular"}-line-height)] whitespace-nowrap`}
                          >
                            {category.name}
                          </span>
                        </div>
                      </div>
                    </div>
                  ))}

                  <Separator className="w-[200px] my-3 bg-corelight-euicolorlightshade border-[#303030]" />

                  <div className="flex flex-col gap-1 w-[200px]">
                    <p className="font-normal text-panelplain text-sm">
                      <span className="text-[#ffffff] leading-6">
                        If an integration is available for{" "}
                      </span>
                      <span className="font-medium text-[#006aa2] text-xs leading-[18px] underline">
                        Elastic Agent and Beats
                      </span>
                      <span className="text-[#ffffff] leading-6">, show:</span>
                    </p>

                    <div className="flex flex-col gap-1 mt-1">
                      <div className="flex items-start gap-2">
                        <div className="pt-1">
                          <Checkbox
                            id="recommended"
                            className="w-4 h-4 bg-coreprimary-euicolorprimary rounded-lg"
                            checked
                          />
                        </div>
                        <label
                          htmlFor="recommended"
                          className="font-m-small-regular text-panelplain text-[length:var(--m-small-regular-font-size)] tracking-[var(--m-small-regular-letter-spacing)] leading-[var(--m-small-regular-line-height)]"
                        >
                          Recommended
                        </label>
                      </div>

                      <div className="flex items-start gap-2">
                        <div className="pt-1">
                          <Checkbox
                            id="agent-only"
                            className="w-4 h-4 bg-coreempty-euicoloremptyshade rounded-lg border-[#c9cbcd]"
                          />
                        </div>
                        <label
                          htmlFor="agent-only"
                          className="font-m-small-regular text-panelplain text-[length:var(--m-small-regular-font-size)] tracking-[var(--m-small-regular-letter-spacing)] leading-[var(--m-small-regular-line-height)]"
                        >
                          Elastic Agent Only
                        </label>
                      </div>

                      <div className="flex items-start gap-2">
                        <div className="pt-1">
                          <Checkbox
                            id="beats-only"
                            className="w-4 h-4 bg-coreempty-euicoloremptyshade rounded-lg border-[#c9cbcd]"
                          />
                        </div>
                        <label
                          htmlFor="beats-only"
                          className="font-m-small-regular text-panelplain text-[length:var(--m-small-regular-font-size)] tracking-[var(--m-small-regular-letter-spacing)] leading-[var(--m-small-regular-line-height)]"
                        >
                          Beats Only
                        </label>
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              {/* Main content area with integration cards */}
              <div className="flex flex-col flex-1">
                {/* Search and filter controls */}
                <div className="flex items-center gap-4 pb-5">
                  <div className="relative flex-1 h-10">
                    <Input
                      className="h-10 bg-[#252526] border-[#1322951a] rounded-md pl-10"
                      placeholder="Search Dashboards"
                    />
                    <SearchIcon className="absolute left-3 top-3 w-4 h-4 text-text-disabled-euicolordisabledtext" />
                  </div>

                  <div className="flex items-center bg-[#252526] rounded-md border border-solid border-[#1322951a]">
                    <div className="flex items-center gap-2 px-2 py-0 bg-[#252526] shadow-filter-button-border-right">
                      <div className="w-4 h-4">
                        <img
                          className="w-3 h-3 mt-0.5 ml-0.5"
                          alt="Grid view"
                          src="/union-4.svg"
                        />
                      </div>
                      <div className="flex items-center gap-2">
                        <span className="font-s-paragraph-bold text-text-disabled-euicolordisabledtext text-[length:var(--s-paragraph-bold-font-size)] tracking-[var(--s-paragraph-bold-letter-spacing)] leading-[var(--s-paragraph-bold-line-height)] whitespace-nowrap">
                          Grid View
                        </span>
                        <Badge className="bg-coreterciary-euicolorterciary text-coreempty-euicoloremptyshade px-1 py-0 rounded-[3px]">
                          11
                        </Badge>
                      </div>
                    </div>

                    <div className="flex items-center gap-2 px-2 py-0 bg-[#252526] shadow-filter-button-border-right">
                      <div className="w-4 h-4">
                        <img
                          className="w-4 h-3 mt-0.5"
                          alt="List view"
                          src="/union-3.svg"
                        />
                      </div>
                      <span className="font-s-paragraph-regular text-text-disabled-euicolordisabledtext text-[length:var(--s-paragraph-regular-font-size)] tracking-[var(--s-paragraph-regular-letter-spacing)] leading-[var(--s-paragraph-regular-line-height)] whitespace-nowrap">
                        List View
                      </span>
                    </div>

                    <div className="flex items-center gap-2 px-2 py-0">
                      <div 
                        className="relative w-7 h-4 bg-coreterciary-euicolorterciary rounded-lg cursor-pointer"
                        onClick={() => setIsInstalledToggled(!isInstalledToggled)}
                      >
                        <div 
                          className={`absolute w-3.5 h-3.5 top-px bg-coreempty-euicoloremptyshade rounded-[7px] border border-solid border-[#006aa2] transition-all duration-200 ${
                            isInstalledToggled ? 'left-[13px]' : 'left-px'
                          }`}
                        ></div>
                      </div>
                      <span className="text-text-disabled-euicolordisabledtext text-sm whitespace-nowrap">
                        Installed
                      </span>
                    </div>
                  </div>
                </div>

                {/* Integration cards grid */}
                <div className="space-y-5">
                  {integrationRows.map((row, rowIndex) => (
                    <div
                      key={`row-${rowIndex}`}
                      className="flex items-start justify-between"
                    >
                      {row.map((card, cardIndex) => (
                        <Card
                          key={`card-${rowIndex}-${cardIndex}`}
                          className="w-[280px] bg-[#23262b] border-[#98a2b3] rounded-md"
                        >
                          <CardContent className="p-4">
                            <div className="flex items-start gap-4">
                              {card.iconType === "aws" ? (
                                <div className="w-8 h-8 bg-[url(/icon.svg)] bg-[100%_100%]" />
                              ) : card.iconType === "amazon" ? (
                                <div className="flex w-8 h-[47px] items-center justify-center">
                                  <div className="w-[33px] h-12 bg-[url(/group.png)] bg-[100%_100%]">
                                    <img
                                      className="w-[30px] h-[45px] mt-px ml-px"
                                      alt="Group"
                                      src="/group-1.png"
                                    />
                                  </div>
                                </div>
                              ) : (
                                <div className="flex w-8 h-[47px] items-start justify-center">
                                  <img
                                    className="w-8 h-[36.06px]"
                                    alt="Group"
                                    src="/group-30.png"
                                  />
                                </div>
                              )}

                              <div className="flex flex-col gap-1.5 flex-1">
                                <h3
                                  className={`${card.iconType === "aws" ? "font-title-small text-[length:var(--title-small-font-size)]" : "font-bold text-[22px] tracking-[-1.00px]"} text-panelplain leading-8`}
                                >
                                  {card.title}
                                </h3>

                                <p
                                  className={`${card.iconType === "aws" ? "font-s-paragraph-regular text-[length:var(--s-paragraph-regular-font-size)] tracking-[var(--s-paragraph-regular-letter-spacing)]" : "font-normal text-sm tracking-[-1.00px]"} text-panelplain leading-[21px]`}
                                >
                                  {card.description}
                                </p>

                                <div className="flex items-center gap-1">
                                  <img className="w-4 h-4" alt="Dot" src="/dot.svg" />
                                  <span
                                    className={`text-panelplain text-xs ${card.iconType === "aws" ? "font-normal tracking-[0]" : "font-normal tracking-[-0.12px]"} leading-3`}
                                  >
                                    <span className="font-bold leading-[18px]">
                                      {card.installedCount}
                                    </span>
                                    <span
                                      className={`${card.iconType === "aws" ? "leading-[18px]" : "tracking-[0] leading-[0.1px]"}`}
                                    >
                                      {" "}
                                      Integrations Installed
                                    </span>
                                  </span>
                                </div>
                              </div>
                            </div>
                          </CardContent>
                        </Card>
                      ))}
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </>
        )}

        {/* Manage Tab Content */}
        {activeTab === "manage" && (
          <div className="flex flex-col gap-6 p-6 w-full">
            {/* Alerts Breakdown Section */}
            <div className="bg-[#2a2d35] rounded-lg">
              {/* Section Header - Collapsible */}
              <div 
                className="flex items-center justify-between p-4 cursor-pointer hover:bg-[#323539] transition-colors"
                onClick={() => setAlertsBreakdownExpanded(!alertsBreakdownExpanded)}
              >
                <div className="flex items-center gap-2">
                  <svg 
                    className={`w-4 h-4 text-text-disabled-euicolordisabledtext transition-transform duration-200 ${
                      alertsBreakdownExpanded ? 'rotate-0' : '-rotate-90'
                    }`} 
                    viewBox="0 0 16 16" 
                    fill="currentColor"
                  >
                    <path d="M8 12L3 7L4.5 5.5L8 9L11.5 5.5L13 7L8 12Z"/>
                  </svg>
                  <h3 className="text-panelplain font-medium text-sm">Alerts Breakdown</h3>
                </div>
                <button className="text-[#0071c2] text-sm hover:underline">
                  Show alerts
                </button>
              </div>

              {/* Collapsible Content */}
              {alertsBreakdownExpanded && (
                <>
                  {/* Table Controls */}
                  <div className="flex items-center justify-between px-4 py-3 bg-[#323539] text-sm">
                    <div className="flex items-center gap-4 text-text-disabled-euicolordisabledtext">
                      <span className="text-[#0071c2]">Showing 1-10 of 15</span>
                      <span className="text-[#0071c2]">Dashboards</span>
                      <span className="text-[#0071c2]">{selectedRows.length} Selected</span>
                      <button 
                        className="text-[#ff6b6b] hover:underline"
                        onClick={clearSelection}
                      >
                        Clear selection
                      </button>
                    </div>
                  </div>

                  {/* Data Table */}
                  <div className="overflow-x-auto">
                    <table className="w-full">
                      <thead className="bg-[#323539]">
                        <tr>
                          <th className="text-left p-3 text-xs font-medium text-text-disabled-euicolordisabledtext uppercase tracking-wider w-8">
                            <Checkbox 
                              className="w-4 h-4" 
                              checked={selectAll}
                              onChange={handleSelectAll}
                            />
                          </th>
                          <th className="text-left p-3 text-xs font-medium text-text-disabled-euicolordisabledtext uppercase tracking-wider">
                            Description
                          </th>
                          <th className="text-left p-3 text-xs font-medium text-text-disabled-euicolordisabledtext uppercase tracking-wider">
                            Status
                          </th>
                          <th className="text-left p-3 text-xs font-medium text-text-disabled-euicolordisabledtext uppercase tracking-wider">
                            Category
                          </th>
                          <th className="text-left p-3 text-xs font-medium text-text-disabled-euicolordisabledtext uppercase tracking-wider">
                            Last updated
                          </th>
                          <th className="text-left p-3 text-xs font-medium text-text-disabled-euicolordisabledtext uppercase tracking-wider">
                            Actions
                          </th>
                        </tr>
                      </thead>
                      <tbody className="bg-[#2a2d35] divide-y divide-[#404040]">
                        {alertsData.map((alert) => (
                          <tr key={alert.id} className="hover:bg-[#323539] transition-colors">
                            <td className="p-3">
                              <Checkbox 
                                className="w-4 h-4" 
                                checked={selectedRows.includes(alert.id)}
                                onChange={() => handleRowSelect(alert.id)}
                              />
                            </td>
                            <td className="p-3 text-sm text-panelplain max-w-xs">
                              {alert.description}
                            </td>
                            <td className="p-3">
                              <div className="flex items-center gap-2">
                                <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                                <span className="text-sm text-panelplain">{alert.status}</span>
                              </div>
                            </td>
                            <td className="p-3 text-sm text-panelplain">
                              {alert.category}
                            </td>
                            <td className="p-3 text-sm text-panelplain">
                              {alert.lastUpdated}
                            </td>
                            <td className="p-3">
                              <div className="flex items-center gap-2">
                                <button className="text-text-disabled-euicolordisabledtext hover:text-panelplain">
                                  <svg className="w-4 h-4" viewBox="0 0 16 16" fill="currentColor">
                                    <path d="M8 3C4.5 3 1.73 5.11 1 8C1.73 10.89 4.5 13 8 13C11.5 13 14.27 10.89 15 8C14.27 5.11 11.5 3 8 3ZM8 11C6.34 11 5 9.66 5 8C5 6.34 6.34 5 8 5C9.66 5 11 6.34 11 8C11 9.66 9.66 11 8 11ZM8 6.5C7.17 6.5 6.5 7.17 6.5 8C6.5 8.83 7.17 9.5 8 9.5C8.83 9.5 9.5 8.83 9.5 8C9.5 7.17 8.83 6.5 8 6.5Z"/>
                                  </svg>
                                </button>
                                <button className="text-text-disabled-euicolordisabledtext hover:text-panelplain">
                                  <svg className="w-4 h-4" viewBox="0 0 16 16" fill="currentColor">
                                    <path d="M8 4C8.55 4 9 3.55 9 3C9 2.45 8.55 2 8 2C7.45 2 7 2.45 7 3C7 3.55 7.45 4 8 4ZM8 6C7.45 6 7 6.45 7 7C7 7.55 7.45 8 8 8C8.55 8 9 7.55 9 7C9 6.45 8.55 6 8 6ZM8 10C7.45 10 7 10.45 7 11C7 11.55 7.45 12 8 12C8.55 12 9 11.55 9 11C9 10.45 8.55 10 8 10Z"/>
                                  </svg>
                                </button>
                              </div>
                            </td>
                          </tr>
                        ))}
                      </tbody>
                    </table>
                  </div>

                  {/* Pagination */}
                  <div className="flex items-center justify-between p-4 bg-[#323539]">
                    <div className="text-sm text-text-disabled-euicolordisabledtext">
                      Rows per page: 10
                    </div>
                    <div className="flex items-center gap-2">
                      <button className="p-1 text-text-disabled-euicolordisabledtext hover:text-panelplain">
                        <svg className="w-4 h-4" viewBox="0 0 16 16" fill="currentColor">
                          <path d="M10 12L5 8L10 4V12Z"/>
                        </svg>
                      </button>
                      <div className="flex items-center gap-1">
                        <button className="px-2 py-1 text-sm text-text-disabled-euicolordisabledtext hover:text-panelplain">1</button>
                        <span className="px-2 py-1 text-sm text-text-disabled-euicolordisabledtext">...</span>
                        <button className="px-2 py-1 text-sm text-text-disabled-euicolordisabledtext hover:text-panelplain">15</button>
                        <button className="px-2 py-1 text-sm text-text-disabled-euicolordisabledtext hover:text-panelplain">16</button>
                        <button className="px-2 py-1 text-sm text-text-disabled-euicolordisabledtext hover:text-panelplain">17</button>
                        <button className="px-2 py-1 text-sm text-text-disabled-euicolordisabledtext hover:text-panelplain">18</button>
                        <button className="px-2 py-1 text-sm text-text-disabled-euicolordisabledtext hover:text-panelplain">19</button>
                        <button className="px-2 py-1 text-sm bg-[#0071c2] text-white rounded">20</button>
                      </div>
                      <button className="p-1 text-text-disabled-euicolordisabledtext hover:text-panelplain">
                        <svg className="w-4 h-4" viewBox="0 0 16 16" fill="currentColor">
                          <path d="M6 4L11 8L6 12V4Z"/>
                        </svg>
                      </button>
                    </div>
                  </div>
                </>
              )}
            </div>

            {/* Combined Charts Section */}
            <div className="bg-[#2a2d35] rounded-lg">
              {/* Section Header - Collapsible */}
              <div 
                className="flex items-center justify-between p-4 cursor-pointer hover:bg-[#323539] transition-colors"
                onClick={() => setAlertsLineChartExpanded(!alertsLineChartExpanded)}
              >
                <div className="flex items-center gap-2">
                  <svg 
                    className={`w-4 h-4 text-text-disabled-euicolordisabledtext transition-transform duration-200 ${
                      alertsLineChartExpanded ? 'rotate-0' : '-rotate-90'
                    }`} 
                    viewBox="0 0 16 16" 
                    fill="currentColor"
                  >
                    <path d="M8 12L3 7L4.5 5.5L8 9L11.5 5.5L13 7L8 12Z"/>
                  </svg>
                  <h3 className="text-panelplain font-medium text-sm">Alerts</h3>
                </div>
                <button className="text-[#0071c2] text-sm hover:underline">
                  Show alerts
                </button>
              </div>

              {/* Collapsible Content */}
              {alertsLineChartExpanded && (
                <div className="p-6">
                  <div className="flex items-center justify-between mb-6">
                    <h4 className="text-panelplain font-medium text-lg">Statistics</h4>
                    <div className="flex items-center gap-2 bg-[#1a1d23] border border-[#404040] rounded px-3 py-1">
                      <svg className="w-4 h-4 text-text-disabled-euicolordisabledtext" viewBox="0 0 16 16" fill="currentColor">
                        <path d="M3 2V14H13V12H5V2H3ZM7 6V10H9V6H7ZM11 4V10H13V4H11Z"/>
                      </svg>
                      <span className="text-sm text-panelplain">14 Aug - 29 Aug</span>
                      <svg className="w-4 h-4 text-text-disabled-euicolordisabledtext" viewBox="0 0 16 16" fill="currentColor">
                        <path d="M4 6L8 10L12 6H4Z"/>
                      </svg>
                    </div>
                  </div>

                  {/* Key Metrics */}
                  <div className="grid grid-cols-2 gap-8 mb-8">
                    <div className="flex items-center gap-3">
                      <svg className="w-4 h-4 text-green-500" viewBox="0 0 16 16" fill="currentColor">
                        <path d="M8 2L10 6H14L11 9L12 14L8 11L4 14L5 9L2 6H6L8 2Z"/>
                      </svg>
                      <div>
                        <div className="text-2xl font-bold text-panelplain">9,500</div>
                        <div className="text-sm text-text-disabled-euicolordisabledtext">Income</div>
                      </div>
                    </div>
                    <div className="flex items-center gap-3">
                      <svg className="w-4 h-4 text-red-500" viewBox="0 0 16 16" fill="currentColor">
                        <path d="M8 14L6 10H2L5 7L4 2L8 5L12 2L11 7L14 10H10L8 14Z"/>
                      </svg>
                      <div>
                        <div className="text-2xl font-bold text-panelplain">1,400</div>
                        <div className="text-sm text-text-disabled-euicolordisabledtext">Expense</div>
                      </div>
                    </div>
                  </div>

                  {/* Side by Side Charts Container */}
                  <div className="grid grid-cols-2 gap-6">
                    {/* Line Chart */}
                    <div className="relative h-80 bg-[#1a1d23] rounded-lg overflow-hidden">
                      <svg 
                        className="absolute inset-0 w-full h-full" 
                        viewBox="0 0 500 320" 
                        preserveAspectRatio="xMidYMid meet"
                      >
                        {/* Background */}
                        <rect width="500" height="320" fill="#1a1d23" />
                        
                        {/* Grid lines - vertical */}
                        <g stroke="#404040" strokeWidth="1" opacity="0.3">
                          {[50, 100, 150, 200, 250, 300, 350, 400, 450].map((x, i) => (
                            <line key={i} x1={x} y1="40" x2={x} y2="280" />
                          ))}
                        </g>
                        
                        {/* Grid lines - horizontal */}
                        <g stroke="#404040" strokeWidth="1" opacity="0.3">
                          {[80, 120, 160, 200, 240, 280].map((y, i) => (
                            <line key={i} x1="50" y1={y} x2="450" y2={y} />
                          ))}
                        </g>

                        {/* Y-axis labels */}
                        <g fill="#666" fontSize="12" textAnchor="end">
                          <text x="45" y="85">10K</text>
                          <text x="45" y="125">5K</text>
                          <text x="45" y="165">2K</text>
                          <text x="45" y="205">1K</text>
                          <text x="45" y="285">0</text>
                        </g>

                        {/* Chart line - smooth curve */}
                        <path
                          d="M 50 240 Q 75 220 100 160 Q 125 100 150 120 Q 200 140 250 180 Q 300 220 350 240 Q 375 260 400 100 Q 425 80 450 160"
                          fill="none"
                          stroke="#0071c2"
                          strokeWidth="3"
                          strokeLinecap="round"
                          strokeLinejoin="round"
                        />

                        {/* Data points */}
                        <circle cx="50" cy="240" r="4" fill="#0071c2" stroke="#1a1d23" strokeWidth="2" />
                        <circle cx="100" cy="160" r="4" fill="#0071c2" stroke="#1a1d23" strokeWidth="2" />
                        <circle cx="150" cy="120" r="4" fill="#0071c2" stroke="#1a1d23" strokeWidth="2" />
                        <circle cx="250" cy="180" r="4" fill="#0071c2" stroke="#1a1d23" strokeWidth="2" />
                        <circle cx="350" cy="240" r="4" fill="#0071c2" stroke="#1a1d23" strokeWidth="2" />
                        <circle cx="400" cy="100" r="4" fill="#0071c2" stroke="#1a1d23" strokeWidth="2" />
                        <circle cx="450" cy="160" r="4" fill="#0071c2" stroke="#1a1d23" strokeWidth="2" />

                        {/* Tooltip on Thursday point */}
                        <g>
                          <rect 
                            x="210" 
                            y="120" 
                            width="120" 
                            height="60" 
                            fill="#2a2d35" 
                            rx="4" 
                            stroke="#404040" 
                            strokeWidth="1" 
                          />
                          
                          <text x="270" y="138" fill="#0071c2" fontSize="14" textAnchor="middle" fontWeight="bold">2,500</text>
                          <text x="270" y="155" fill="#ff6b6b" fontSize="14" textAnchor="middle" fontWeight="bold">1,200</text>
                          <text x="270" y="170" fill="#666" fontSize="12" textAnchor="middle">23 August, 2021</text>
                          
                          <line 
                            x1="250" 
                            y1="180" 
                            x2="250" 
                            y2="280" 
                            stroke="#666" 
                            strokeWidth="1" 
                            strokeDasharray="4,4" 
                          />
                        </g>

                        {/* X-axis labels */}
                        <g fill="#666" fontSize="12" textAnchor="middle">
                          <text x="50" y="305">Mon</text>
                          <text x="100" y="305">Tue</text>
                          <text x="150" y="305">Wed</text>
                          <text x="250" y="305">Thu</text>
                          <text x="350" y="305">Fri</text>
                          <text x="400" y="305">Sat</text>
                          <text x="450" y="305">Sun</text>
                        </g>
                      </svg>

                      {/* Legend - positioned in top right */}
                      <div className="absolute top-4 right-4 flex items-center gap-4 bg-[#2a2d35] px-3 py-2 rounded border border-[#404040]">
                        <div className="flex items-center gap-2">
                          <div className="w-3 h-3 bg-green-500 rounded-full"></div>
                          <span className="text-sm text-panelplain font-medium">2,500</span>
                        </div>
                        <div className="flex items-center gap-2">
                          <div className="w-3 h-3 bg-red-500 rounded-full"></div>
                          <span className="text-sm text-panelplain font-medium">1,200</span>
                        </div>
                      </div>
                    </div>

                    {/* Vertical Divider */}
                    <div className="absolute left-1/2 top-0 bottom-0 w-px bg-[#404040] transform -translate-x-1/2"></div>

                    {/* Bar Chart */}
                    <div className="relative h-80 bg-[#1a1d23] rounded-lg overflow-hidden">
                      <svg 
                        className="absolute inset-0 w-full h-full" 
                        viewBox="0 0 500 320" 
                        preserveAspectRatio="xMidYMid meet"
                      >
                        {/* Background */}
                        <rect width="500" height="320" fill="#1a1d23" />
                        
                        {/* Grid lines - horizontal */}
                        <g stroke="#404040" strokeWidth="1" opacity="0.3">
                          {[60, 120, 180, 240, 280].map((y, i) => (
                            <line key={i} x1="40" y1={y} x2="460" y2={y} />
                          ))}
                        </g>

                        {/* Y-axis labels */}
                        <g fill="#666" fontSize="12" textAnchor="end">
                          <text x="35" y="65">500</text>
                          <text x="35" y="125">400</text>
                          <text x="35" y="185">300</text>
                          <text x="35" y="245">200</text>
                          <text x="35" y="285">0</text>
                        </g>

                        {/* Bar Chart Data */}
                        {barChartData.map((data, i) => {
                          const x = 60 + (i * 45);
                          const incomeHeight = (data.income / 500) * 220;
                          const expenseHeight = (data.expense / 500) * 220;
                          const barWidth = 30;
                          
                          return (
                            <g key={i}>
                              {/* Income bar (blue) */}
                              <rect
                                x={x - 15}
                                y={280 - incomeHeight}
                                width={barWidth}
                                height={incomeHeight}
                                fill="#0071c2"
                                rx="2"
                              />
                              {/* Expense bar (orange) */}
                              <rect
                                x={x - 15}
                                y={280 - incomeHeight - expenseHeight}
                                width={barWidth}
                                height={expenseHeight}
                                fill="#ff8c42"
                                rx="2"
                              />
                            </g>
                          );
                        })}

                        {/* Tooltip on day 16 */}
                        <g>
                          <rect 
                            x="120" 
                            y="80" 
                            width="120" 
                            height="60" 
                            fill="#2a2d35" 
                            rx="4" 
                            stroke="#404040" 
                            strokeWidth="1" 
                          />
                          
                          <text x="180" y="98" fill="#0071c2" fontSize="14" textAnchor="middle" fontWeight="bold">2,500</text>
                          <text x="180" y="115" fill="#ff8c42" fontSize="14" textAnchor="middle" fontWeight="bold">1,200</text>
                          <text x="180" y="130" fill="#666" fontSize="12" textAnchor="middle">23 August, 2021</text>
                        </g>

                        {/* X-axis labels */}
                        <g fill="#666" fontSize="12" textAnchor="middle">
                          {barChartData.map((data, i) => (
                            <text key={i} x={60 + (i * 45)} y="305">{data.day}</text>
                          ))}
                        </g>
                      </svg>
                    </div>
                  </div>
                </div>
              )}
            </div>
          </div>
        )}
      </div>
    </div>
  );
};